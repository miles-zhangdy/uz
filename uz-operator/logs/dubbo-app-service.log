[INFO][2018-03-21 14:22:10,910][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][2018-03-21 14:22:11,531][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:22:11,667][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:22:11,685][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:22:14,977][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:22:14,978][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:23:10,822][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][2018-03-21 14:23:11,451][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:11,584][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:11,602][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:13,277][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:13,297][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:23:13,322][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file C:\Users\lenovo\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.wangsong.system.service.UserService=empty://192.168.17.144:20880/com.wangsong.system.service.UserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.UserService&methods=findTByT,insertUser,updatePassword,unauth,selectByPrimaryKey,toUpdatePassword,findTByPage,deleteUser,index,updateUser&pid=15964&side=provider&timestamp=1514556552614, com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService&methods=update,findSysRolePermissionListByPageNo,deleteById,save,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422722, com.wangsong.system.service.ResourcesService=empty://192.168.17.144:20880/com.wangsong.system.service.ResourcesService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.ResourcesService&methods=findTByT,findResourcesEMUByResources,selectByPrimaryKey,deleteResources,insertResources,findResources,updateResources&pid=15964&side=provider&timestamp=1514556552547, com.zdy.dubbo.api.service.dictionary.IDictionaryParamService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryParamService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryParamService&methods=update,deleteById,save,findDictionaryParamListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422585, com.wangsong.system.service.RoleService=empty://192.168.17.144:20880/com.wangsong.system.service.RoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.RoleService&methods=selectAll,selectByPrimaryKey,updateRole,findTByPage,insertRole,deleteRole&pid=15964&side=provider&timestamp=1514556552583, com.zdy.dubbo.service.UserService=empty://192.168.17.144:20880/com.zdy.dubbo.service.UserService?anyhost=true&application=springBoot_dubbo_consumer&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.UserService&methods=test&pid=14844&side=provider&timestamp=1505123143552, com.zdy.dubbo.api.service.links.ILinksService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.links.ILinksService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.links.ILinksService&methods=update,deleteById,save,delete,getById,findLinksListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422850, org.spring.springboot.dubbo.service.CityDubboService:1.0.0=empty://192.168.17.144:20880/org.spring.springboot.dubbo.service.CityDubboService?anyhost=true&application=provider&category=configurators&check=false&dubbo=2.5.3&interface=org.spring.springboot.dubbo.service.CityDubboService&methods=findCityByName&pid=16340&revision=1.0.0&side=provider&timestamp=1513826443473&version=1.0.0, com.wangsong.system.service.DictService=empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=configurators&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=routers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=providers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816, org.spring.springboot.dubbo.CityDubboService:1.0.0=empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=providers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=configurators&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=routers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0, com.zdy.service.test.TestService=dubbo://192.168.17.176:20880/com.zdy.service.test.TestService?anyhost=true&application=dubbo_server&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&owner=dubbo_s&pid=11956&revision=0.0.1-SNAPSHOT&serialization=java&side=provider&timestamp=1496195400200 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=routers&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827, com.zdy.dubbo.api.service.sysrole.ISysRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrole.ISysRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrole.ISysRoleService&methods=update,findSysRoleList,deleteById,save,delete,getById,findSysRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422675, com.zdy.dubbo.api.service.syspermission.ISysPermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.syspermission.ISysPermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.syspermission.ISysPermissionService&methods=update,findUserSysPermissionList,findSysPermissionListByPageNo,deleteById,save,delete,getById,findSysPermissionList,findSysPermissionMenuList&pid=19380&serialization=java&side=provider&timestamp=1521534422629, com.zdy.dubbo.api.service.user.IUserService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.user.IUserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.user.IUserService&methods=update,fetch,deleteById,save,delete,getById,login,findUserListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422767, com.zdydubbo.api.TestDubboService=empty://192.168.11.1:20880/com.zdydubbo.api.TestDubboService?anyhost=true&application=springBoot_dubbo_server&category=configurators&check=false&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdydubbo.api.TestDubboService&methods=save&pid=9864&side=provider&timestamp=1501644012149, com.zdy.dubbo.api.service.userrole.ISysUserRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.userrole.ISysUserRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.userrole.ISysUserRoleService&methods=update,deleteById,save,findSysUserRoleList,delete,getById,findSysUserRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422813, com.itstyle.dubbo.service.IUserService=empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062, com.hjz.dubbo.api.DubboServiceTest=empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=providers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=configurators&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=routers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868, org.uz.api.service.links.ILinksService=empty://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&category=configurators&check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579, com.zdy.dubbo.api.service.siteparameter.ISiteParameterService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.siteparameter.ISiteParameterService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.siteparameter.ISiteParameterService&methods=update,deleteById,save,delete,getById,findSiteParameterListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422896, com.zdy.dubbo.api.IUserService=empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478, com.zdy.dubbo.service.IUserService=dubbo://192.168.17.144:20880/com.zdy.dubbo.service.IUserService?anyhost=true&application=springBoot_dubbo_provider&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=14768&side=provider&timestamp=1505290147296 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523, com.zdy.dubbo.api.service.dictionary.IDictionaryService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryService&methods=update,deleteById,save,findDictionaryListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422113}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:13,343][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO][2018-03-21 14:23:13,343][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG][2018-03-21 14:23:13,392][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[DEBUG][2018-03-21 14:23:13,392][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG][2018-03-21 14:23:13,457][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO][2018-03-21 14:23:13,457][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG][2018-03-21 14:23:13,458][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG][2018-03-21 14:23:13,458][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG][2018-03-21 14:23:13,468][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:23:13,482][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:23:13,492][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=consumers&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:23:13,520][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:23:13,551][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234, urls: [dubbo://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=configurators&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234], dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,577][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,620][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,633][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:23:13,705][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.17.144:20880 from NettyClient 192.168.17.144 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0acf7c3a, /192.168.17.144:62179 => /192.168.17.144:20880]], dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:23:13,705][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient zhangdaye/192.168.17.144 connect to the server /192.168.17.144:20880, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,730][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,741][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:23:13,752][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:23:13,768][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service org.uz.api.service.links.ILinksService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubbo-uz&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&serialization=java&side=consumer&timestamp=1521613393234, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:24:01,434][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:24:13,151][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:24:28,300][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:25:14,727][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:25:58,764][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:22,726][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][2018-03-21 14:26:23,398][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:23,523][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:23,540][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:25,236][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:25,252][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:26:25,277][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file C:\Users\lenovo\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.wangsong.system.service.UserService=empty://192.168.17.144:20880/com.wangsong.system.service.UserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.UserService&methods=findTByT,insertUser,updatePassword,unauth,selectByPrimaryKey,toUpdatePassword,findTByPage,deleteUser,index,updateUser&pid=15964&side=provider&timestamp=1514556552614, com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService&methods=update,findSysRolePermissionListByPageNo,deleteById,save,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422722, com.wangsong.system.service.ResourcesService=empty://192.168.17.144:20880/com.wangsong.system.service.ResourcesService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.ResourcesService&methods=findTByT,findResourcesEMUByResources,selectByPrimaryKey,deleteResources,insertResources,findResources,updateResources&pid=15964&side=provider&timestamp=1514556552547, com.zdy.dubbo.api.service.dictionary.IDictionaryParamService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryParamService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryParamService&methods=update,deleteById,save,findDictionaryParamListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422585, com.wangsong.system.service.RoleService=empty://192.168.17.144:20880/com.wangsong.system.service.RoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.RoleService&methods=selectAll,selectByPrimaryKey,updateRole,findTByPage,insertRole,deleteRole&pid=15964&side=provider&timestamp=1514556552583, com.zdy.dubbo.service.UserService=empty://192.168.17.144:20880/com.zdy.dubbo.service.UserService?anyhost=true&application=springBoot_dubbo_consumer&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.UserService&methods=test&pid=14844&side=provider&timestamp=1505123143552, com.zdy.dubbo.api.service.links.ILinksService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.links.ILinksService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.links.ILinksService&methods=update,deleteById,save,delete,getById,findLinksListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422850, org.spring.springboot.dubbo.service.CityDubboService:1.0.0=empty://192.168.17.144:20880/org.spring.springboot.dubbo.service.CityDubboService?anyhost=true&application=provider&category=configurators&check=false&dubbo=2.5.3&interface=org.spring.springboot.dubbo.service.CityDubboService&methods=findCityByName&pid=16340&revision=1.0.0&side=provider&timestamp=1513826443473&version=1.0.0, com.wangsong.system.service.DictService=empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=configurators&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=routers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=providers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816, org.spring.springboot.dubbo.CityDubboService:1.0.0=empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=providers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=configurators&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=routers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0, com.zdy.service.test.TestService=dubbo://192.168.17.176:20880/com.zdy.service.test.TestService?anyhost=true&application=dubbo_server&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&owner=dubbo_s&pid=11956&revision=0.0.1-SNAPSHOT&serialization=java&side=provider&timestamp=1496195400200 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=routers&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827, com.zdy.dubbo.api.service.sysrole.ISysRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrole.ISysRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrole.ISysRoleService&methods=update,findSysRoleList,deleteById,save,delete,getById,findSysRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422675, com.zdy.dubbo.api.service.syspermission.ISysPermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.syspermission.ISysPermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.syspermission.ISysPermissionService&methods=update,findUserSysPermissionList,findSysPermissionListByPageNo,deleteById,save,delete,getById,findSysPermissionList,findSysPermissionMenuList&pid=19380&serialization=java&side=provider&timestamp=1521534422629, com.zdy.dubbo.api.service.user.IUserService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.user.IUserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.user.IUserService&methods=update,fetch,deleteById,save,delete,getById,login,findUserListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422767, com.zdydubbo.api.TestDubboService=empty://192.168.11.1:20880/com.zdydubbo.api.TestDubboService?anyhost=true&application=springBoot_dubbo_server&category=configurators&check=false&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdydubbo.api.TestDubboService&methods=save&pid=9864&side=provider&timestamp=1501644012149, com.zdy.dubbo.api.service.userrole.ISysUserRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.userrole.ISysUserRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.userrole.ISysUserRoleService&methods=update,deleteById,save,findSysUserRoleList,delete,getById,findSysUserRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422813, com.hjz.dubbo.api.DubboServiceTest=empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=providers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=configurators&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=routers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868, com.itstyle.dubbo.service.IUserService=empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062, org.uz.api.service.links.ILinksService=dubbo://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579 empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=configurators&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234 empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=21352&side=consumer&timestamp=1521613393234, com.zdy.dubbo.api.service.siteparameter.ISiteParameterService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.siteparameter.ISiteParameterService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.siteparameter.ISiteParameterService&methods=update,deleteById,save,delete,getById,findSiteParameterListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422896, com.zdy.dubbo.api.IUserService=empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478, com.zdy.dubbo.service.IUserService=dubbo://192.168.17.144:20880/com.zdy.dubbo.service.IUserService?anyhost=true&application=springBoot_dubbo_provider&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=14768&side=provider&timestamp=1505290147296 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523, com.zdy.dubbo.api.service.dictionary.IDictionaryService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryService&methods=update,deleteById,save,findDictionaryListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422113}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:25,293][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO][2018-03-21 14:26:25,293][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG][2018-03-21 14:26:25,377][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[DEBUG][2018-03-21 14:26:25,377][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG][2018-03-21 14:26:25,394][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO][2018-03-21 14:26:25,394][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG][2018-03-21 14:26:25,394][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG][2018-03-21 14:26:25,394][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG][2018-03-21 14:26:25,401][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:26:25,412][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:26:25,421][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=consumers&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:25,452][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:25,496][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192, urls: [dubbo://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=configurators&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192], dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,521][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,564][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,582][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:25,669][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.17.144:20880 from NettyClient 192.168.17.144 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x647ed928, /192.168.17.144:62384 => /192.168.17.144:20880]], dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:25,669][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient zhangdaye/192.168.17.144 connect to the server /192.168.17.144:20880, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,701][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,711][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:25,723][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:25,740][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service org.uz.api.service.links.ILinksService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubbo-uz&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&serialization=java&side=consumer&timestamp=1521613585192, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:26:27,828][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:26:59,898][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][2018-03-21 14:27:00,556][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:00,686][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:00,704][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:02,385][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:02,402][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:27:02,421][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file C:\Users\lenovo\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.wangsong.system.service.UserService=empty://192.168.17.144:20880/com.wangsong.system.service.UserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.UserService&methods=findTByT,insertUser,updatePassword,unauth,selectByPrimaryKey,toUpdatePassword,findTByPage,deleteUser,index,updateUser&pid=15964&side=provider&timestamp=1514556552614, com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrolepermission.ISysRolePermissionService&methods=update,findSysRolePermissionListByPageNo,deleteById,save,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422722, com.wangsong.system.service.ResourcesService=empty://192.168.17.144:20880/com.wangsong.system.service.ResourcesService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.ResourcesService&methods=findTByT,findResourcesEMUByResources,selectByPrimaryKey,deleteResources,insertResources,findResources,updateResources&pid=15964&side=provider&timestamp=1514556552547, com.zdy.dubbo.api.service.dictionary.IDictionaryParamService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryParamService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryParamService&methods=update,deleteById,save,findDictionaryParamListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422585, com.wangsong.system.service.RoleService=empty://192.168.17.144:20880/com.wangsong.system.service.RoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.wangsong.system.service.RoleService&methods=selectAll,selectByPrimaryKey,updateRole,findTByPage,insertRole,deleteRole&pid=15964&side=provider&timestamp=1514556552583, com.zdy.dubbo.service.UserService=empty://192.168.17.144:20880/com.zdy.dubbo.service.UserService?anyhost=true&application=springBoot_dubbo_consumer&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.UserService&methods=test&pid=14844&side=provider&timestamp=1505123143552, com.zdy.dubbo.api.service.links.ILinksService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.links.ILinksService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.links.ILinksService&methods=update,deleteById,save,delete,getById,findLinksListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422850, org.spring.springboot.dubbo.service.CityDubboService:1.0.0=empty://192.168.17.144:20880/org.spring.springboot.dubbo.service.CityDubboService?anyhost=true&application=provider&category=configurators&check=false&dubbo=2.5.3&interface=org.spring.springboot.dubbo.service.CityDubboService&methods=findCityByName&pid=16340&revision=1.0.0&side=provider&timestamp=1513826443473&version=1.0.0, com.wangsong.system.service.DictService=empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=configurators&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=routers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816 empty://192.168.17.144/com.wangsong.system.service.DictService?application=dubbo-app-web&category=providers&default.check=false&dubbo=2.5.3&interface=com.wangsong.system.service.DictService&methods=insertDict,findTByT,selectByPrimaryKey,updateByPrimaryKeyDict,findTByPage,deleteByPrimaryKeyDict&pid=16100&side=consumer&timestamp=1514556759816, org.spring.springboot.dubbo.CityDubboService:1.0.0=empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=providers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=configurators&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0 empty://192.168.17.144/org.spring.springboot.dubbo.CityDubboService?application=consumer&category=routers&dubbo=2.5.3&interface=org.spring.springboot.dubbo.CityDubboService&methods=findCityByName&pid=15728&revision=1.0.0&side=consumer&timestamp=1513826477232&version=1.0.0, com.zdy.service.test.TestService=dubbo://192.168.17.176:20880/com.zdy.service.test.TestService?anyhost=true&application=dubbo_server&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&owner=dubbo_s&pid=11956&revision=0.0.1-SNAPSHOT&serialization=java&side=provider&timestamp=1496195400200 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827 empty://192.168.17.176/com.zdy.service.test.TestService?application=dubbo_web&category=routers&check=false&dubbo=2.5.3&interface=com.zdy.service.test.TestService&methods=testName1&organization=dubbox&pid=12024&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1496196313827, com.zdy.dubbo.api.service.sysrole.ISysRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.sysrole.ISysRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.sysrole.ISysRoleService&methods=update,findSysRoleList,deleteById,save,delete,getById,findSysRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422675, com.zdy.dubbo.api.service.syspermission.ISysPermissionService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.syspermission.ISysPermissionService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.syspermission.ISysPermissionService&methods=update,findUserSysPermissionList,findSysPermissionListByPageNo,deleteById,save,delete,getById,findSysPermissionList,findSysPermissionMenuList&pid=19380&serialization=java&side=provider&timestamp=1521534422629, com.zdy.dubbo.api.service.user.IUserService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.user.IUserService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.user.IUserService&methods=update,fetch,deleteById,save,delete,getById,login,findUserListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422767, com.zdydubbo.api.TestDubboService=empty://192.168.11.1:20880/com.zdydubbo.api.TestDubboService?anyhost=true&application=springBoot_dubbo_server&category=configurators&check=false&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdydubbo.api.TestDubboService&methods=save&pid=9864&side=provider&timestamp=1501644012149, com.zdy.dubbo.api.service.userrole.ISysUserRoleService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.userrole.ISysUserRoleService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.userrole.ISysUserRoleService&methods=update,deleteById,save,findSysUserRoleList,delete,getById,findSysUserRoleListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422813, com.itstyle.dubbo.service.IUserService=empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062 empty://192.168.17.144/com.itstyle.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.itstyle.dubbo.service.IUserService&methods=saveUser&pid=7760&side=consumer&timestamp=1505132827062, com.hjz.dubbo.api.DubboServiceTest=empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=providers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=configurators&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868 empty://192.168.11.1/com.hjz.dubbo.api.DubboServiceTest?application=springBoot_dubbo_provider&category=routers&default.check=false&default.loadbalance=leastactive&default.timeout=30000&dubbo=2.5.3&interface=com.hjz.dubbo.api.DubboServiceTest&methods=calculate&pid=10704&side=consumer&timestamp=1501478206868, org.uz.api.service.links.ILinksService=dubbo://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579 empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=configurators&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192 empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=15336&side=consumer&timestamp=1521613585192, com.zdy.dubbo.api.service.siteparameter.ISiteParameterService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.siteparameter.ISiteParameterService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.siteparameter.ISiteParameterService&methods=update,deleteById,save,delete,getById,findSiteParameterListByPageNo&pid=19380&serialization=java&side=provider&timestamp=1521534422896, com.zdy.dubbo.api.IUserService=empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=providers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478 empty://192.168.17.144/com.zdy.dubbo.api.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.IUserService&methods=saveUser&pid=10776&side=consumer&timestamp=1505181516478, com.zdy.dubbo.service.IUserService=dubbo://192.168.17.144:20880/com.zdy.dubbo.service.IUserService?anyhost=true&application=springBoot_dubbo_provider&default.loadbalance=roundrobin&default.threadpool=fixed&default.threads=10&default.timeout=10000&dispatcher=all&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=14768&side=provider&timestamp=1505290147296 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=configurators&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523 empty://192.168.17.144/com.zdy.dubbo.service.IUserService?application=springBoot_dubbo_consumer&category=routers&default.check=false&dubbo=2.5.3&interface=com.zdy.dubbo.service.IUserService&methods=saveUser&pid=10912&side=consumer&timestamp=1505290219523, com.zdy.dubbo.api.service.dictionary.IDictionaryService=empty://192.168.17.144:20880/com.zdy.dubbo.api.service.dictionary.IDictionaryService?anyhost=true&application=dubbo-app-service&category=configurators&check=false&dubbo=2.5.3&interface=com.zdy.dubbo.api.service.dictionary.IDictionaryService&methods=update,deleteById,save,findDictionaryListByPageNo,delete,getById&pid=19380&serialization=java&side=provider&timestamp=1521534422113}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:02,464][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO][2018-03-21 14:27:02,464][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG][2018-03-21 14:27:02,505][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[DEBUG][2018-03-21 14:27:02,505][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG][2018-03-21 14:27:02,522][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO][2018-03-21 14:27:02,523][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG][2018-03-21 14:27:02,523][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG][2018-03-21 14:27:02,523][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG][2018-03-21 14:27:02,530][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2018-03-21 14:27:02,542][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2018-03-21 14:27:02,552][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=consumers&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&side=consumer&timestamp=1521613622336, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:27:02,585][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&side=consumer&timestamp=1521613622336, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:27:02,624][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=providers,configurators,routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&side=consumer&timestamp=1521613622336, urls: [dubbo://192.168.17.144:20880/org.uz.api.service.links.ILinksService?anyhost=true&application=dubbo-uz&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=11888&serialization=java&side=provider&timestamp=1521534879579, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=configurators&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&side=consumer&timestamp=1521613622336, empty://192.168.17.144/org.uz.api.service.links.ILinksService?application=dubbo-uz&category=routers&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&side=consumer&timestamp=1521613622336], dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,649][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,688][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,700][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:27:02,777][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.17.144:20880 from NettyClient 192.168.17.144 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x226272b5, /192.168.17.144:62440 => /192.168.17.144:20880]], dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:27:02,777][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient zhangdaye/192.168.17.144 connect to the server /192.168.17.144:20880, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,803][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,813][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:02,825][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.17.144
[INFO][2018-03-21 14:27:02,839][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service org.uz.api.service.links.ILinksService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubbo-uz&check=false&default.check=false&dubbo=2.5.3&interface=org.uz.api.service.links.ILinksService&methods=findLinksListByPageNo&pid=20596&serialization=java&side=consumer&timestamp=1521613622336, dubbo version: 2.5.3, current host: 192.168.17.144
[DEBUG][2018-03-21 14:27:05,878][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.17.144
